"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getStopPlaceDeparturesProps = exports.getStopPlacesByBboxProps = exports.getStopPlaceProps = exports.getItinerariesProps = void 0;

var _queryHelper = require("./queryHelper");

var getItinerariesProps = "\n    query tripPatterns($numTripPatterns:Int!,$wheelchair:Boolean!,$from:Location!,$to:Location!,$dateTime:DateTime!,$arriveBy:Boolean!,$modes:[Mode]!){\n        trip(\n            numTripPatterns: $numTripPatterns\n            wheelchair: $wheelchair\n            from: $from\n            to: $to\n            dateTime: $dateTime\n            arriveBy: $arriveBy\n            modes: $modes\n        ) {\n            tripPatterns {\n                startTime\n                endTime\n                duration\n                waitingTime\n                walkDistance\n                legs { ...legFields }\n            }\n        }\n    }\n\n    fragment legFields on Leg {\n        mode\n        aimedStartTime\n        aimedEndTime\n        expectedStartTime\n        expectedEndTime\n        realtime\n        distance\n        duration\n        pointsOnLink { points length }\n        ".concat(_queryHelper.placeFields, "\n        intermediateQuays { id name description publicCode }\n        authority { id name }\n        operator { id name url }\n        ").concat(_queryHelper.lineFields, "\n        serviceJourney { ...serviceJourneyFields }\n        ").concat(_queryHelper.intermediateEstimatedCallFields, "\n        ride\n    }\n\n    ").concat(_queryHelper.placeFragment, "\n\n    ").concat(_queryHelper.lineFragment, "\n\n    fragment serviceJourneyFields on ServiceJourney {\n      id\n      privateCode\n      linePublicCode\n      wheelchairAccessible\n      journeyPattern { notices { text } }\n      notices { text }\n      ").concat(_queryHelper.situationFields, "\n    }\n\n    ").concat(_queryHelper.intermediateEstimatedCallFragment, "\n\n    ").concat(_queryHelper.situationFragment, "\n");
exports.getItinerariesProps = getItinerariesProps;
var getStopPlaceProps = "\n    query StopPlace($id:String!) {\n        stopPlace(id:$id) {\n            id\n            name\n            latitude\n            longitude\n            description\n            wheelchairBoarding\n            weighting\n            transportMode\n            transportSubmode\n            quays { ...quayFields }\n        }\n\n    }\n\n    fragment quayFields on Quay {\n        id\n        publicCode\n        description\n        ".concat(_queryHelper.situationFields, "\n    }\n    ").concat(_queryHelper.situationFragment, "\n");
exports.getStopPlaceProps = getStopPlaceProps;
var getStopPlacesByBboxProps = "\n    query StopPlacesByBboxProps($minLat:Float, $minLng:Float, $maxLng:Float, $maxLat:Float) {\n        stopPlacesByBbox(minimumLatitude:$minLat, minimumLongitude:$minLng, maximumLatitude:$maxLat, maximumLongitude:$maxLng) {\n            id\n            name\n            latitude\n            longitude\n            description\n            wheelchairBoarding\n            weighting\n            transportMode\n            transportSubmode\n            quays { ...quayFields }\n        }\n\n    }\n\n    fragment quayFields on Quay {\n        id\n        publicCode\n        description\n        ".concat(_queryHelper.situationFields, "\n    }\n    ").concat(_queryHelper.situationFragment, "\n");
exports.getStopPlacesByBboxProps = getStopPlacesByBboxProps;
var getStopPlaceDeparturesProps = "\n    query StopPlaceDepartures($ids:[String]!,$start:DateTime!,$range:Int!,$departures:Int!,$omitNonBoarding:Boolean!) {\n        stopPlaces(ids:$ids) {\n          id\n          estimatedCalls(startTime:$start, timeRange:$range, numberOfDepartures:$departures, omitNonBoarding:$omitNonBoarding) { ...estimatedCallFields }\n        }\n    }\n\n    fragment estimatedCallFields on EstimatedCall {\n        aimedDepartureTime\n        expectedDepartureTime\n        realtime\n        forBoarding\n        forAlighting\n        date\n        destinationDisplay { frontText }\n        notices { text }\n        quay { ...quayFields }\n        serviceJourney { ...serviceJourneyFields }\n    }\n\n    fragment quayFields on Quay {\n        id\n        publicCode\n        description\n        ".concat(_queryHelper.situationFields, "\n    }\n\n    fragment serviceJourneyFields on ServiceJourney {\n      id\n      journeyPattern { ...journeyPatternFields }\n      notices { text }\n      ").concat(_queryHelper.situationFields, "\n    }\n\n    fragment journeyPatternFields on JourneyPattern {\n      id\n      name\n      ").concat(_queryHelper.lineFields, "\n      notices { text }\n    }\n\n    ").concat(_queryHelper.lineFragment, "\n\n    ").concat(_queryHelper.situationFragment, "\n");
exports.getStopPlaceDeparturesProps = getStopPlaceDeparturesProps;